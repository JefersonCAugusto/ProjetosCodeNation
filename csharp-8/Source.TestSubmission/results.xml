<?xml version="1.0" encoding="utf-8"?>
<testsuites time="19.878" tests="51" failures="13">
  <testsuite id="0" name="Source.TestSubmission.dll" tests="51" failures="13" time="19.878">
    <testcase classname="Codenation.Challenge.AccelerationServiceTest" name="Codenation.Challenge.AccelerationServiceTest.Should_Be_Right_Acceleration_When_Find_By_Id(id: 1)" time="4.3090000" />
    <testcase classname="Codenation.Challenge.AccelerationServiceTest" name="Codenation.Challenge.AccelerationServiceTest.Should_Be_Right_Acceleration_When_Find_By_Id(id: 2)" time="0.0320000" />
    <testcase classname="Codenation.Challenge.AccelerationServiceTest" name="Codenation.Challenge.AccelerationServiceTest.Should_Be_Right_Acceleration_When_Find_By_Id(id: 3)" time="0.0030000" />
    <testcase classname="Codenation.Challenge.AccelerationServiceTest" name="Codenation.Challenge.AccelerationServiceTest.Should_Update_The_Acceleration_When_Save" time="0.0320000" />
    <testcase classname="Codenation.Challenge.AccelerationServiceTest" name="Codenation.Challenge.AccelerationServiceTest.Should_Be_Right_Accelerations_When_Find_By_Company_Id(companyId: 1)" time="0.2710000">
      <error message="Assert.Equal() Failure&#xD;&#xA;Expected: List&lt;Acceleration&gt; [Acceleration { Candidates = null, Challenge = null, ChallengeId = 2, CreatedAt = 2019-05-13T00:58:05.0000000, Id = 1, ... }, Acceleration { Candidates = null, Challenge = null, ChallengeId = 3, CreatedAt = 2019-06-18T10:47:40.0000000, Id = 2, ... }, Acceleration { Candidates = null, Challenge = null, ChallengeId = 5, CreatedAt = 2018-11-10T09:45:27.0000000, Id = 3, ... }, Acceleration { Candidates = null, Challenge = null, ChallengeId = 10, CreatedAt = 2019-05-18T10:14:05.0000000, Id = 4, ... }]&#xD;&#xA;Actual:   List&lt;Acceleration&gt; [Acceleration { Candidates = null, Challenge = null, ChallengeId = 2, CreatedAt = 2019-05-13T00:58:05.0000000, Id = 1, ... }, Acceleration { Candidates = null, Challenge = null, ChallengeId = 3, CreatedAt = 2019-06-18T10:47:40.0000000, Id = 2, ... }, Acceleration { Candidates = null, Challenge = null, ChallengeId = 5, CreatedAt = 2018-11-10T09:45:27.0000000, Id = 3, ... }, Acceleration { Candidates = null, Challenge = null, ChallengeId = 10, CreatedAt = 2019-05-18T10:14:05.0000000, Id = 4, ... }, Acceleration { Candidates = null, Challenge = null, ChallengeId = 5, CreatedAt = 2018-11-10T09:45:27.0000000, Id = 3, ... }, ...]">   at Codenation.Challenge.AccelerationServiceTest.Should_Be_Right_Accelerations_When_Find_By_Company_Id(Int32 companyId) in C:\Users\Guto\codenation\csharp-8\Source.TestSubmission\AccelerationServiceTest.cs:line 58</error>
    </testcase>
    <testcase classname="Codenation.Challenge.AccelerationServiceTest" name="Codenation.Challenge.AccelerationServiceTest.Should_Be_Right_Accelerations_When_Find_By_Company_Id(companyId: 2)" time="0.0370000" />
    <testcase classname="Codenation.Challenge.AccelerationServiceTest" name="Codenation.Challenge.AccelerationServiceTest.Should_Add_New_Acceleration_When_Save" time="0.0300000" />
    <testcase classname="Codenation.Challenge.CandidateServiceTest" name="Codenation.Challenge.CandidateServiceTest.Should_Be_Right_Candidates_When_Find_By_Company_Id(companyId: 2)" time="4.4920000" />
    <testcase classname="Codenation.Challenge.CandidateServiceTest" name="Codenation.Challenge.CandidateServiceTest.Should_Be_Right_Candidates_When_Find_By_Company_Id(companyId: 3)" time="0.0350000" />
    <testcase classname="Codenation.Challenge.CandidateServiceTest" name="Codenation.Challenge.CandidateServiceTest.Should_Be_Right_Candidates_When_Find_By_Company_Id(companyId: 1)" time="0.0060000" />
    <testcase classname="Codenation.Challenge.CandidateServiceTest" name="Codenation.Challenge.CandidateServiceTest.Should_Be_Right_Candidates_When_Find_By_Accelaration_Id(accelerationId: 2)" time="0.0990000">
      <error message="Assert.Equal() Failure&#xD;&#xA;Expected: List&lt;Candidate&gt; [Candidate { Acceleration = null, AccelerationId = 2, Company = null, CompanyId = 2, CreatedAt = 2019-03-06T04:21:52.0000000, ... }, Candidate { Acceleration = null, AccelerationId = 2, Company = null, CompanyId = 1, CreatedAt = 2019-03-23T02:31:49.0000000, ... }, Candidate { Acceleration = null, AccelerationId = 2, Company = null, CompanyId = 5, CreatedAt = 2019-02-05T15:06:35.0000000, ... }, Candidate { Acceleration = null, AccelerationId = 2, Company = null, CompanyId = 6, CreatedAt = 2018-10-27T09:14:21.0000000, ... }]&#xD;&#xA;Actual:   List&lt;Candidate&gt; [Candidate { Acceleration = null, AccelerationId = 2, Company = null, CompanyId = 2, CreatedAt = 2019-03-06T04:21:52.0000000, ... }, Candidate { Acceleration = null, AccelerationId = 3, Company = null, CompanyId = 2, CreatedAt = 2018-08-23T20:06:53.0000000, ... }, Candidate { Acceleration = null, AccelerationId = 4, Company = null, CompanyId = 2, CreatedAt = 2019-02-08T02:31:33.0000000, ... }]">   at Codenation.Challenge.CandidateServiceTest.Should_Be_Right_Candidates_When_Find_By_Accelaration_Id(Int32 accelerationId) in C:\Users\Guto\codenation\csharp-8\Source.TestSubmission\CandidateServiceTest.cs:line 83</error>
    </testcase>
    <testcase classname="Codenation.Challenge.CandidateServiceTest" name="Codenation.Challenge.CandidateServiceTest.Should_Be_Right_Candidates_When_Find_By_Accelaration_Id(accelerationId: 3)" time="0.0160000">
      <error message="Assert.Equal() Failure&#xD;&#xA;Expected: List&lt;Candidate&gt; [Candidate { Acceleration = null, AccelerationId = 3, Company = null, CompanyId = 3, CreatedAt = 2018-09-04T08:52:21.0000000, ... }, Candidate { Acceleration = null, AccelerationId = 3, Company = null, CompanyId = 1, CreatedAt = 2018-10-20T21:16:17.0000000, ... }, Candidate { Acceleration = null, AccelerationId = 3, Company = null, CompanyId = 1, CreatedAt = 2019-01-11T12:51:23.0000000, ... }, Candidate { Acceleration = null, AccelerationId = 3, Company = null, CompanyId = 2, CreatedAt = 2018-08-23T20:06:53.0000000, ... }, Candidate { Acceleration = null, AccelerationId = 3, Company = null, CompanyId = 5, CreatedAt = 2019-08-04T22:15:40.0000000, ... }, ...]&#xD;&#xA;Actual:   List&lt;Candidate&gt; [Candidate { Acceleration = null, AccelerationId = 3, Company = null, CompanyId = 3, CreatedAt = 2018-09-04T08:52:21.0000000, ... }]">   at Codenation.Challenge.CandidateServiceTest.Should_Be_Right_Candidates_When_Find_By_Accelaration_Id(Int32 accelerationId) in C:\Users\Guto\codenation\csharp-8\Source.TestSubmission\CandidateServiceTest.cs:line 83</error>
    </testcase>
    <testcase classname="Codenation.Challenge.CandidateServiceTest" name="Codenation.Challenge.CandidateServiceTest.Should_Be_Right_Candidates_When_Find_By_Accelaration_Id(accelerationId: 1)" time="0.0080000">
      <error message="Assert.Equal() Failure&#xD;&#xA;Expected: List&lt;Candidate&gt; [Candidate { Acceleration = null, AccelerationId = 1, Company = null, CompanyId = 1, CreatedAt = 2019-06-10T18:10:43.0000000, ... }, Candidate { Acceleration = null, AccelerationId = 1, Company = null, CompanyId = 5, CreatedAt = 2019-08-11T17:31:33.0000000, ... }, Candidate { Acceleration = null, AccelerationId = 1, Company = null, CompanyId = 6, CreatedAt = 2018-08-24T16:06:08.0000000, ... }, Candidate { Acceleration = null, AccelerationId = 1, Company = null, CompanyId = 7, CreatedAt = 2018-09-01T04:21:00.0000000, ... }, Candidate { Acceleration = null, AccelerationId = 1, Company = null, CompanyId = 8, CreatedAt = 2019-07-22T06:07:46.0000000, ... }, ...]&#xD;&#xA;Actual:   List&lt;Candidate&gt; [Candidate { Acceleration = null, AccelerationId = 1, Company = null, CompanyId = 1, CreatedAt = 2019-06-10T18:10:43.0000000, ... }, Candidate { Acceleration = null, AccelerationId = 2, Company = null, CompanyId = 1, CreatedAt = 2019-03-23T02:31:49.0000000, ... }, Candidate { Acceleration = null, AccelerationId = 3, Company = null, CompanyId = 1, CreatedAt = 2018-10-20T21:16:17.0000000, ... }, Candidate { Acceleration = null, AccelerationId = 4, Company = null, CompanyId = 1, CreatedAt = 2019-01-04T01:21:18.0000000, ... }, Candidate { Acceleration = null, AccelerationId = 3, Company = null, CompanyId = 1, CreatedAt = 2019-01-11T12:51:23.0000000, ... }, ...]">   at Codenation.Challenge.CandidateServiceTest.Should_Be_Right_Candidates_When_Find_By_Accelaration_Id(Int32 accelerationId) in C:\Users\Guto\codenation\csharp-8\Source.TestSubmission\CandidateServiceTest.cs:line 83</error>
    </testcase>
    <testcase classname="Codenation.Challenge.CandidateServiceTest" name="Codenation.Challenge.CandidateServiceTest.Should_Be_Right_Candidate_When_Find_By_Id(userId: 2, accelerationId: 2, companyId: 2)" time="0.0550000" />
    <testcase classname="Codenation.Challenge.CandidateServiceTest" name="Codenation.Challenge.CandidateServiceTest.Should_Be_Right_Candidate_When_Find_By_Id(userId: 3, accelerationId: 3, companyId: 3)" time="0.0030000" />
    <testcase classname="Codenation.Challenge.CandidateServiceTest" name="Codenation.Challenge.CandidateServiceTest.Should_Be_Right_Candidate_When_Find_By_Id(userId: 1, accelerationId: 1, companyId: 1)" time="0.0350000" />
    <testcase classname="Codenation.Challenge.CandidateServiceTest" name="Codenation.Challenge.CandidateServiceTest.Should_Update_The_Candidate_When_Save" time="0.0980000" />
    <testcase classname="Codenation.Challenge.CandidateServiceTest" name="Codenation.Challenge.CandidateServiceTest.Should_Add_New_Candidate_When_Save" time="0.0150000" />
    <testcase classname="Codenation.Challenge.ChallengeServiceTest" name="Codenation.Challenge.ChallengeServiceTest.Should_Add_New_Challenge_When_Save" time="4.2010000" />
    <testcase classname="Codenation.Challenge.ChallengeServiceTest" name="Codenation.Challenge.ChallengeServiceTest.Should_Be_Right_Challenges_When_Find_By_Accelartion_And_User(accelerationId: 1, userId: 1)" time="0.4400000" />
    <testcase classname="Codenation.Challenge.ChallengeServiceTest" name="Codenation.Challenge.ChallengeServiceTest.Should_Be_Right_Challenges_When_Find_By_Accelartion_And_User(accelerationId: 3, userId: 3)" time="0.0090000">
      <error message="Assert.Equal() Failure&#xD;&#xA;Expected: List&lt;Challenge&gt; [Challenge { Accelerations = null, CreatedAt = 2019-01-09T12:28:27.0000000, Id = 5, Name = &quot;Sipes and Sons&quot;, Slug = &quot;bdubarry4-medgeller4&quot;, ... }]&#xD;&#xA;Actual:   List&lt;Challenge&gt; [Challenge { Accelerations = null, CreatedAt = 2019-01-09T12:28:27.0000000, Id = 5, Name = &quot;Sipes and Sons&quot;, Slug = &quot;bdubarry4-medgeller4&quot;, ... }, Challenge { Accelerations = null, CreatedAt = 2019-01-09T12:28:27.0000000, Id = 5, Name = &quot;Sipes and Sons&quot;, Slug = &quot;bdubarry4-medgeller4&quot;, ... }]">   at Codenation.Challenge.ChallengeServiceTest.Should_Be_Right_Challenges_When_Find_By_Accelartion_And_User(Int32 accelerationId, Int32 userId) in C:\Users\Guto\codenation\csharp-8\Source.TestSubmission\ChallengeServiceTest.cs:line 44</error>
    </testcase>
    <testcase classname="Codenation.Challenge.ChallengeServiceTest" name="Codenation.Challenge.ChallengeServiceTest.Should_Be_Right_Challenges_When_Find_By_Accelartion_And_User(accelerationId: 2, userId: 2)" time="0.0160000" />
    <testcase classname="Codenation.Challenge.ChallengeServiceTest" name="Codenation.Challenge.ChallengeServiceTest.Should_Update_The_Challenge_When_Save" time="0.0410000" />
    <testcase classname="Codenation.Challenge.CompanyServiceTest" name="Codenation.Challenge.CompanyServiceTest.Should_Be_Right_Companies_When_Find_By_Accelaration_Id(accelerationId: 2)" time="0.1180000" />
    <testcase classname="Codenation.Challenge.CompanyServiceTest" name="Codenation.Challenge.CompanyServiceTest.Should_Be_Right_Companies_When_Find_By_Accelaration_Id(accelerationId: 1)" time="0.0130000" />
    <testcase classname="Codenation.Challenge.CompanyServiceTest" name="Codenation.Challenge.CompanyServiceTest.Should_Add_New_Company_When_Save" time="0.0440000" />
    <testcase classname="Codenation.Challenge.CompanyServiceTest" name="Codenation.Challenge.CompanyServiceTest.Should_Be_Right_Companies_When_Find_By_User_Id(userId: 1)" time="0.0510000">
      <error message="Assert.Equal() Failure&#xD;&#xA;Expected: List&lt;Company&gt; [Company { Candidates = null, CreatedAt = 2019-06-13T23:22:48.0000000, Id = 1, Name = &quot;Keeling-Ward&quot;, Slug = &quot;dgirardoni0-jscola0&quot; }]&#xD;&#xA;Actual:   List&lt;Company&gt; [Company { Candidates = null, CreatedAt = 2019-06-13T23:22:48.0000000, Id = 1, Name = &quot;Keeling-Ward&quot;, Slug = &quot;dgirardoni0-jscola0&quot; }, Company { Candidates = null, CreatedAt = 2019-06-13T23:22:48.0000000, Id = 1, Name = &quot;Keeling-Ward&quot;, Slug = &quot;dgirardoni0-jscola0&quot; }, Company { Candidates = null, CreatedAt = 2019-06-13T23:22:48.0000000, Id = 1, Name = &quot;Keeling-Ward&quot;, Slug = &quot;dgirardoni0-jscola0&quot; }, Company { Candidates = null, CreatedAt = 2019-06-13T23:22:48.0000000, Id = 1, Name = &quot;Keeling-Ward&quot;, Slug = &quot;dgirardoni0-jscola0&quot; }]">   at Codenation.Challenge.CompanyServiceTest.Should_Be_Right_Companies_When_Find_By_User_Id(Int32 userId) in C:\Users\Guto\codenation\csharp-8\Source.TestSubmission\CompanyServiceTest.cs:line 89</error>
    </testcase>
    <testcase classname="Codenation.Challenge.CompanyServiceTest" name="Codenation.Challenge.CompanyServiceTest.Should_Be_Right_Companies_When_Find_By_User_Id(userId: 3)" time="0.0090000">
      <error message="Assert.Equal() Failure&#xD;&#xA;Expected: List&lt;Company&gt; [Company { Candidates = null, CreatedAt = 2018-12-28T10:20:48.0000000, Id = 3, Name = &quot;Schuster, Hoeger and Abshire&quot;, Slug = &quot;vlorenzin2-bvitall2&quot; }, Company { Candidates = null, CreatedAt = 2019-04-30T02:41:10.0000000, Id = 2, Name = &quot;Halvorson LLC&quot;, Slug = &quot;pmattack1-hsantus1&quot; }]&#xD;&#xA;Actual:   List&lt;Company&gt; [Company { Candidates = null, CreatedAt = 2018-12-28T10:20:48.0000000, Id = 3, Name = &quot;Schuster, Hoeger and Abshire&quot;, Slug = &quot;vlorenzin2-bvitall2&quot; }, Company { Candidates = null, CreatedAt = 2019-04-30T02:41:10.0000000, Id = 2, Name = &quot;Halvorson LLC&quot;, Slug = &quot;pmattack1-hsantus1&quot; }, Company { Candidates = null, CreatedAt = 2019-04-30T02:41:10.0000000, Id = 2, Name = &quot;Halvorson LLC&quot;, Slug = &quot;pmattack1-hsantus1&quot; }]">   at Codenation.Challenge.CompanyServiceTest.Should_Be_Right_Companies_When_Find_By_User_Id(Int32 userId) in C:\Users\Guto\codenation\csharp-8\Source.TestSubmission\CompanyServiceTest.cs:line 89</error>
    </testcase>
    <testcase classname="Codenation.Challenge.CompanyServiceTest" name="Codenation.Challenge.CompanyServiceTest.Should_Be_Right_Companies_When_Find_By_User_Id(userId: 2)" time="0.0160000">
      <error message="Assert.Equal() Failure&#xD;&#xA;Expected: List&lt;Company&gt; [Company { Candidates = null, CreatedAt = 2019-04-30T02:41:10.0000000, Id = 2, Name = &quot;Halvorson LLC&quot;, Slug = &quot;pmattack1-hsantus1&quot; }, Company { Candidates = null, CreatedAt = 2019-06-13T23:22:48.0000000, Id = 1, Name = &quot;Keeling-Ward&quot;, Slug = &quot;dgirardoni0-jscola0&quot; }]&#xD;&#xA;Actual:   List&lt;Company&gt; [Company { Candidates = null, CreatedAt = 2019-04-30T02:41:10.0000000, Id = 2, Name = &quot;Halvorson LLC&quot;, Slug = &quot;pmattack1-hsantus1&quot; }, Company { Candidates = null, CreatedAt = 2019-06-13T23:22:48.0000000, Id = 1, Name = &quot;Keeling-Ward&quot;, Slug = &quot;dgirardoni0-jscola0&quot; }, Company { Candidates = null, CreatedAt = 2019-06-13T23:22:48.0000000, Id = 1, Name = &quot;Keeling-Ward&quot;, Slug = &quot;dgirardoni0-jscola0&quot; }]">   at Codenation.Challenge.CompanyServiceTest.Should_Be_Right_Companies_When_Find_By_User_Id(Int32 userId) in C:\Users\Guto\codenation\csharp-8\Source.TestSubmission\CompanyServiceTest.cs:line 89</error>
    </testcase>
    <testcase classname="Codenation.Challenge.CompanyServiceTest" name="Codenation.Challenge.CompanyServiceTest.Should_Be_Right_Company_When_Find_By_Id(id: 3)" time="0.0070000" />
    <testcase classname="Codenation.Challenge.CompanyServiceTest" name="Codenation.Challenge.CompanyServiceTest.Should_Be_Right_Company_When_Find_By_Id(id: 2)" time="0.0020000" />
    <testcase classname="Codenation.Challenge.CompanyServiceTest" name="Codenation.Challenge.CompanyServiceTest.Should_Be_Right_Company_When_Find_By_Id(id: 1)" time="0.0020000" />
    <testcase classname="Codenation.Challenge.CompanyServiceTest" name="Codenation.Challenge.CompanyServiceTest.Should_Update_The_Company_When_Save" time="0.0350000" />
    <testcase classname="Codenation.Challenge.SubmissionServiceTest" name="Codenation.Challenge.SubmissionServiceTest.Should_Add_New_Submission_When_Save" time="0.1370000" />
    <testcase classname="Codenation.Challenge.SubmissionServiceTest" name="Codenation.Challenge.SubmissionServiceTest.Should_Be_Right_Submissions_When_Find_By_Challenge_And_Acceleration(challengeId: 3, accelerationId: 3)" time="0.0690000">
      <error message="Assert.Equal() Failure&#xD;&#xA;Expected: List&lt;Submission&gt; [Submission { Challenge = null, ChallengeId = 3, CreatedAt = 2019-03-20T11:22:20.0000000, Score = 26,81, User = null, ... }, Submission { Challenge = null, ChallengeId = 3, CreatedAt = 2018-09-01T22:13:02.0000000, Score = 79,22, User = null, ... }]&#xD;&#xA;Actual:   List&lt;Submission&gt; []">   at Codenation.Challenge.SubmissionServiceTest.Should_Be_Right_Submissions_When_Find_By_Challenge_And_Acceleration(Int32 challengeId, Int32 accelerationId) in C:\Users\Guto\codenation\csharp-8\Source.TestSubmission\SubmissionServiceTest.cs:line 63</error>
    </testcase>
    <testcase classname="Codenation.Challenge.SubmissionServiceTest" name="Codenation.Challenge.SubmissionServiceTest.Should_Be_Right_Submissions_When_Find_By_Challenge_And_Acceleration(challengeId: 1, accelerationId: 1)" time="0.0160000">
      <error message="Assert.Equal() Failure&#xD;&#xA;Expected: List&lt;Submission&gt; [Submission { Challenge = null, ChallengeId = 1, CreatedAt = 2019-08-08T07:34:56.0000000, Score = 91,13, User = null, ... }]&#xD;&#xA;Actual:   List&lt;Submission&gt; []">   at Codenation.Challenge.SubmissionServiceTest.Should_Be_Right_Submissions_When_Find_By_Challenge_And_Acceleration(Int32 challengeId, Int32 accelerationId) in C:\Users\Guto\codenation\csharp-8\Source.TestSubmission\SubmissionServiceTest.cs:line 63</error>
    </testcase>
    <testcase classname="Codenation.Challenge.SubmissionServiceTest" name="Codenation.Challenge.SubmissionServiceTest.Should_Be_Right_Submissions_When_Find_By_Challenge_And_Acceleration(challengeId: 2, accelerationId: 2)" time="0.0130000">
      <error message="Assert.Equal() Failure&#xD;&#xA;Expected: List&lt;Submission&gt; [Submission { Challenge = null, ChallengeId = 2, CreatedAt = 2019-08-05T05:28:00.0000000, Score = 1,19, User = null, ... }, Submission { Challenge = null, ChallengeId = 2, CreatedAt = 2019-04-02T11:41:42.0000000, Score = 50,0, User = null, ... }]&#xD;&#xA;Actual:   List&lt;Submission&gt; []">   at Codenation.Challenge.SubmissionServiceTest.Should_Be_Right_Submissions_When_Find_By_Challenge_And_Acceleration(Int32 challengeId, Int32 accelerationId) in C:\Users\Guto\codenation\csharp-8\Source.TestSubmission\SubmissionServiceTest.cs:line 63</error>
    </testcase>
    <testcase classname="Codenation.Challenge.SubmissionServiceTest" name="Codenation.Challenge.SubmissionServiceTest.Should_Be_Higher_Score_When_Get_By_Challenge_Id(challengeId: 3)" time="0.1120000" />
    <testcase classname="Codenation.Challenge.SubmissionServiceTest" name="Codenation.Challenge.SubmissionServiceTest.Should_Be_Higher_Score_When_Get_By_Challenge_Id(challengeId: 1)" time="0.0060000" />
    <testcase classname="Codenation.Challenge.SubmissionServiceTest" name="Codenation.Challenge.SubmissionServiceTest.Should_Be_Higher_Score_When_Get_By_Challenge_Id(challengeId: 2)" time="0.0060000" />
    <testcase classname="Codenation.Challenge.SubmissionServiceTest" name="Codenation.Challenge.SubmissionServiceTest.Should_Update_The_Sumission_When_Save" time="0.0210000" />
    <testcase classname="Codenation.Challenge.UserServiceTest" name="Codenation.Challenge.UserServiceTest.Should_Be_Right_Users_When_Find_By_Accelaration_Name(accelerationName: &quot;Velvet Grass&quot;)" time="4.6570000" />
    <testcase classname="Codenation.Challenge.UserServiceTest" name="Codenation.Challenge.UserServiceTest.Should_Be_Right_Users_When_Find_By_Accelaration_Name(accelerationName: &quot;Progesterone&quot;)" time="0.0070000" />
    <testcase classname="Codenation.Challenge.UserServiceTest" name="Codenation.Challenge.UserServiceTest.Should_Be_Right_Users_When_Find_By_Company_Id(companyId: 3)" time="0.0820000" />
    <testcase classname="Codenation.Challenge.UserServiceTest" name="Codenation.Challenge.UserServiceTest.Should_Be_Right_Users_When_Find_By_Company_Id(companyId: 1)" time="0.0170000">
      <error message="Assert.Equal() Failure&#xD;&#xA;Expected: List&lt;User&gt; [User { Candidates = null, CreatedAt = 2019-06-17T06:35:28.0000000, Email = &quot;ccapaldi0@exblog.jp&quot;, FullName = &quot;Chlo Capaldi&quot;, Id = 1, ... }, User { Candidates = null, CreatedAt = 2018-08-25T17:45:58.0000000, Email = &quot;vcowwell1@lycos.com&quot;, FullName = &quot;Vivia Cowwell&quot;, Id = 2, ... }]&#xD;&#xA;Actual:   List&lt;User&gt; [User { Candidates = null, CreatedAt = 2019-06-17T06:35:28.0000000, Email = &quot;ccapaldi0@exblog.jp&quot;, FullName = &quot;Chlo Capaldi&quot;, Id = 1, ... }, User { Candidates = null, CreatedAt = 2019-06-17T06:35:28.0000000, Email = &quot;ccapaldi0@exblog.jp&quot;, FullName = &quot;Chlo Capaldi&quot;, Id = 1, ... }, User { Candidates = null, CreatedAt = 2019-06-17T06:35:28.0000000, Email = &quot;ccapaldi0@exblog.jp&quot;, FullName = &quot;Chlo Capaldi&quot;, Id = 1, ... }, User { Candidates = null, CreatedAt = 2019-06-17T06:35:28.0000000, Email = &quot;ccapaldi0@exblog.jp&quot;, FullName = &quot;Chlo Capaldi&quot;, Id = 1, ... }, User { Candidates = null, CreatedAt = 2018-08-25T17:45:58.0000000, Email = &quot;vcowwell1@lycos.com&quot;, FullName = &quot;Vivia Cowwell&quot;, Id = 2, ... }, ...]">   at Codenation.Challenge.UserServiceTest.Should_Be_Right_Users_When_Find_By_Company_Id(Int32 companyId) in C:\Users\Guto\codenation\csharp-8\Source.TestSubmission\UserServiceTest.cs:line 89</error>
    </testcase>
    <testcase classname="Codenation.Challenge.UserServiceTest" name="Codenation.Challenge.UserServiceTest.Should_Be_Right_Users_When_Find_By_Company_Id(companyId: 2)" time="0.0080000">
      <error message="Assert.Equal() Failure&#xD;&#xA;Expected: List&lt;User&gt; [User { Candidates = null, CreatedAt = 2018-08-25T17:45:58.0000000, Email = &quot;vcowwell1@lycos.com&quot;, FullName = &quot;Vivia Cowwell&quot;, Id = 2, ... }, User { Candidates = null, CreatedAt = 2019-06-06T22:01:28.0000000, Email = &quot;owynn2@themeforest.net&quot;, FullName = &quot;Osborne Wynn&quot;, Id = 3, ... }]&#xD;&#xA;Actual:   List&lt;User&gt; [User { Candidates = null, CreatedAt = 2018-08-25T17:45:58.0000000, Email = &quot;vcowwell1@lycos.com&quot;, FullName = &quot;Vivia Cowwell&quot;, Id = 2, ... }, User { Candidates = null, CreatedAt = 2019-06-06T22:01:28.0000000, Email = &quot;owynn2@themeforest.net&quot;, FullName = &quot;Osborne Wynn&quot;, Id = 3, ... }, User { Candidates = null, CreatedAt = 2019-06-06T22:01:28.0000000, Email = &quot;owynn2@themeforest.net&quot;, FullName = &quot;Osborne Wynn&quot;, Id = 3, ... }]">   at Codenation.Challenge.UserServiceTest.Should_Be_Right_Users_When_Find_By_Company_Id(Int32 companyId) in C:\Users\Guto\codenation\csharp-8\Source.TestSubmission\UserServiceTest.cs:line 89</error>
    </testcase>
    <testcase classname="Codenation.Challenge.UserServiceTest" name="Codenation.Challenge.UserServiceTest.Should_Return_Right_User_When_Find_By_Id(id: 1)" time="0.0610000" />
    <testcase classname="Codenation.Challenge.UserServiceTest" name="Codenation.Challenge.UserServiceTest.Should_Return_Right_User_When_Find_By_Id(id: 3)" time="0.0020000" />
    <testcase classname="Codenation.Challenge.UserServiceTest" name="Codenation.Challenge.UserServiceTest.Should_Return_Right_User_When_Find_By_Id(id: 2)" time="0.0020000" />
    <testcase classname="Codenation.Challenge.UserServiceTest" name="Codenation.Challenge.UserServiceTest.Should_Add_New_User_When_Save" time="0.0400000" />
    <testcase classname="Codenation.Challenge.UserServiceTest" name="Codenation.Challenge.UserServiceTest.Should_Update_The_User_When_Save" time="0.0420000" />
  </testsuite>
</testsuites>